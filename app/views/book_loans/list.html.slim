.label Teacher Books
h4 = @teacher.name

ul#borrowers-options.dropdown-content
  / - @teachers.all.each do |teacher|
  /   li 
  /     = link_to teacher.name, employee_book_loans_path(teacher,year:@academic_year.id)
ul#year-options.dropdown-content
  li  
    = link_to 'All', employee_book_loans_path(params.merge(year:'all').symbolize_keys)
  - AcademicYear.list_for_menu.each do |year|
    li 
      = link_to year.name, employee_book_loans_path(params.merge(year:year.id).symbolize_keys)
// NOTE: for these wierd .symbolize_keys, refer to this article https://github.com/rails/rails/issues/21645
ul#checked-options.dropdown-content
  li 
    = link_to 'All', employee_book_loans_path
  li
    = link_to 'Checked', employee_book_loans_path(checked:'t', year:params[:year])
  li
    = link_to 'Not checked', employee_book_loans_path(checked:'f', year:params[:year])

= form_tag list_action_book_loans_path(employee_id:params[:employee_id]), remote:true do 
  nav
    .nav-wrapper
      ul
        li
          a#borrowers-menu.dropdown-button href="#!" data-activates="borrowers-options" data-year="#{@academic_year.id}"
            span#teacher = @teacher.present? ? "#{@teacher.name}" : "Teacher name" 
            i.material-icons.right arrow_drop_down
        li
          a.dropdown-button href="#!" data-activates="year-options"
            span#year = @academic_year.present? ? "#{@academic_year.name}" : "Academic Year" 
            i.material-icons.right arrow_drop_down
      #context-buttons style="display:none;"
        ul.right     
          li  
            button.btn type='submit' name='move' Move to:
          li
            = select_tag :to_teacher, options_from_collection_for_select(Employee.all.order(:name),:id,:name)
          li style="width:110px" class="text-align:center"
            = select_tag :to_year, options_from_collection_for_select(AcademicYear.list_for_menu,:id,:name,AcademicYear.current_id)
          - if can? :delete, BookLoan
            li
              button.btn.red type='submit' name='delete' data-confirm="Are you sure?"
                i.material-icons delete
      #default-buttons
        ul.right
          li 
              = link_to employee_book_loans_receipt_path(@teacher, year: @academic_year.id)
                | Receipt
                i.material-icons.left book
          li 
            -if @academic_year.present?
              = link_to employee_book_loans_path(@teacher, year: @academic_year.id, format: :pdf), target: '_blank'
                | PDF
                i.material-icons.left description
            - else
              = link_to employee_book_loans_path(@teacher, format: :pdf), target: '_blank'
                | PDF
                i.material-icons.left description
          li
            = link_to scan_employee_book_loans_path(@teacher, year: @academic_year.id)
              | Return Book
              i.material-icons.left import_contacts
          - if can? :manage, BookLoan
            li
              = link_to new_employee_book_loans_path(@teacher)
                | Add
                i.material-icons.left add
                
  #show-modal.modal.modal-fixed-footer

  .card-panel
    - unless @error.present?
      table.compact.striped
        thead
          tr
            th
              input.checkbox-toggle type="checkbox" id="checkbox-toggle"
              = label_tag "checkbox-toggle", ""
            th No
            th = sort_link :barcode
            th = sort_link :title, 'Book title'
            //th = sort_link :out_date
            th = sort_link :return_date 
            th = sort_link :subject
            th = sort_link :return_status, "Checked?"
              / a.dropdown-button href="#!" data-activates="checked-options" data-beloworigin="true" 
              /   = params[:checked]=='t' ? "Checked" : params[:checked]=='f' ? 'Not Checked' : 'Checked?'
              /   i.material-icons.right arrow_drop_down          
            th Actions
              
        tbody
          - @book_loans.each_with_index do |book_loan, i|
            tr id="row-#{book_loan.id}"
              td
                input.checkbox type="checkbox" id="add_#{book_loan.id}" name="add[#{book_loan.id}]"
                = label_tag "add[#{book_loan.id}]", ""
              td = @book_loans.offset + i + 1
              td = link_to book_loan.barcode, book_loan.book_copy
              td 
                - if book_loan.book_edition.present?
                  = link_to book_loan.book_edition.try(:title).truncate(50), book_loan.book_edition, remote: true
              //td = book_loan.out_date
              td = book_loan.return_date 
              td = book_loan.subject
              td style='text-align:center' = book_loan.return_status == 'R' ? '&#9745;'.html_safe : ''
              td 
                = link_to employee_book_loan_path(employee_id: @teacher.id, id:book_loan.id), remote:true
                  i.material-icons visibility
                - if can? :delete, BookLoan
                  = link_to book_loan, data: {id: book_loan.id, confirm: 'Are you sure?'}, :method => :delete, class:"red-text delete-link", remote: true
                    i.material-icons delete
    - else 
      = @error

.toolbar.z-depth-1
  = will_paginate @book_titles
  
javascript:
  var update_borrowers_menu = function () {
    var year = $("#borrowers-menu").data("year");
    $.getJSON("/book_loans/borrowers.json?year="+year, null, function (data) {
      var list = [];
      $.each(data, function(i,rec){
        list += "<li><a href='/employees/"+rec.id+"/book_loans?year="+year+"'>"+rec.name+"</a></li>";
      });
      $("#borrowers-options").html(list);
      $("#borrowers-menu").dropdown();
    });
  };
  var toggle_menu = function() {
    if ($('input.checkbox:checked').length > 0) {
      $('#context-buttons').show();
      $('#default-buttons').hide();
    } else {
      $('#context-buttons').hide(); 
      $('#default-buttons').show();
    }
  };
  function prepare_menu() {
    $('input.checkbox').change( function() {
      toggle_menu();
    });
    $("#checkbox-toggle").change( function() {
      // Have to use 'prop' not 'attr'. 'Attr' only loads initial state.
      $('input.checkbox').prop('checked', $("#checkbox-toggle").is(":checked"));
      toggle_menu();
    });
    update_borrowers_menu();
  }
  $(document).on('page:load', function(){
    prepare_menu();
  });
  $(document).on('ready', function(){
    prepare_menu();
  });
