-title "New book loan for #{@teacher.try(:name)}"

h4 New Book Loan

= form_for @teacher do |f|
  nav
    .nav-wrapper
      .brand-logo style="margin-left: 20px; font-size:1.5em"
        = @teacher.name
      ul.right
        li
          .input-field
            = select_tag :acad_year, options_from_collection_for_select(AcademicYear.list_for_menu,:id,:name, @academic_year_id)
        li#add-row
          / Note: 'Append' new row at the end of the 'tbody#book_loans' node
          / Do not forget to put local variables below (the same as in render partial:'book_loan_fields')
          = link_to_add_association f, :book_loans, 'data-association-insertion-method' => 'append', 'data-association-insertion-node' => 'tbody#book_loans', render_options: { locals: {employee: @teacher, user: current_user} }
            ' Add Row
            i.material-icons.left playlist_add
  
  .toolbar
    div.right style="margin-top: 5px;"
      input.checkbox-toggle type="checkbox" id="use-scanner"
      = label_tag "use-scanner", "Use scanner"

  .card-panel
    .row
      - if @category_name.present?
        .input-field 
          .label Book Category: #{@category_name}
      table.compact
        thead
          th Barcode
          th Title 
          th
        tbody#book_loans
          = f.fields_for :book_loans, @teacher.book_loans.build do |book_loan|
            = render partial: 'book_loan_fields', locals: { f: book_loan, employee: @teacher, user: current_user }
          = hidden_field_tag :book_catg, @category_id

  .toolbar.z-depth-1
    button.btn.waves-effect.waves-light type="submit" Save
    = link_to 'Cancel', employee_book_loans_path(@teacher), class: "waves-effect waves-light btn btn-flat"

javascript:
  $("[name$='[barcode]']").codeScanner({
    minEntryChars: 11,
    onScan: function($element, barcode) {
      var acad_year = $("#acad_year option:selected").val();
      $.getJSON("/book_copies/"+barcode+".json?empl=" + #{@teacher.id} + "?year=" + acad_year, null, function (data) {
        if ($("tr:last").find("[name$='[barcode]']").val() != "") {
          $(".add_fields").trigger('click');
        } else if (!$("tr:last").is(":visible")) {
          $("tr:last").show();
        }
        var book = data.book_copy;
        if (book.loans !== undefined && !(book.loans.return_status == "R" || book.loans.return_status == "RI")) {
          Materialize.toast("Book is borrowed by " + book.loans.employee_name || book.loans.student_name, 5000, 'red');
        } else {
          insert_values(data, $("tr:last"));
        }
      }).fail(function(xhr){
        Materialize.toast($.parseJSON(xhr.responseText).errors, 4000, 'red');
      });            
    }
  });
  $("tbody#book_loans").on("keypress", "tr", function (e) {
    var acad_year = $("#acad_year option:selected").val();
    if (e.keyCode == 13) {
      e.preventDefault();
      e.stopPropagation();
      var barcode = $(this).find("[name$='[barcode]']").val().trim();
      var element = $(this);
      console.log(element);
      $.getJSON("/book_copies/"+barcode+".json" + "?year=" + acad_year, null, function (data) {
        var book = data.book_copy;
        if (book.loans !== undefined && !(book.loans.return_status == "R" || book.loans.return_status == "RI")) {
          Materialize.toast("Book is borrowed by " + book.loans.employee_name || book.loans.student_name, 5000, 'red');
        } else {
          insert_values(data, element);
        }          
      }).fail(function(xhr){
        $(e.target).val('');
        Materialize.toast($.parseJSON(xhr.responseText).errors, 5000, 'red');
      });
    }
  });
  
  var insert_values = function (data, el) {
    book = data.book_copy;
    var acad_year = $("#acad_year option:selected").val();
    el.find(".titles").html(book.book_edition.title);
    el.find(".book_copy_ids").val(book.id);
    el.find(".academic_year_ids").val(acad_year);
    el.find(".book_edition_ids").val(book.book_edition.id);
    el.find(".book_title_ids").val(book.book_title.id);
    el.find(".barcodes").val(book.barcode);
    el.find(".bkudids").val(book.book_title.bkudid);     
  };

  $("#use-scanner").change(function() {
    $("tr.nested-fields").each(function(){
      v = $(this).find(".book_copy_ids").attr('value');
      if (v == undefined) {
        if ($("#use-scanner").is(":checked")) {
          $(this).hide();
        } else {
          $(this).show();
        }
      } 
    });
    if (!$("#use-scanner").is(":checked")) {
      if ($("tr:last").find("[name$='[barcode]']").val() != "") {
        $(".add_fields").trigger('click');
      }
      $("#add-row").show();
    } else {
      $("#add-row").hide();
    }
  });
