.card-panel
  table
    tr
      td style="vertical-align:top"
        - thumbnail = @book_edition.small_thumbnail.present? ? @book_edition.small_thumbnail : 'book-icon.png' 
        = image_tag(thumbnail, class: 'list_image')
      td
        .list_description
          dl.row
            dt = @book_edition.title
            dd = @book_edition.subtitle
            dd.col.s6
              .label Author
              .item = @book_edition.authors
            dd.col.s6
              .label ISBN 10
              .item = @book_edition.isbn10
            dd.col.s6 
              .label Publisher
              .item = @book_edition.publisher
            dd.col.s6
              .label ISBN
              .item = @book_edition.isbn13
            dd.col.s6 
              .label Published Date
              .item = @book_edition.published_date
            dd.col.s6
              .label Page count
              .item = @book_edition.page_count

= form_for @book_edition do |f|
  nav
    .nav-wrapper
      .brand-logo style="margin-left: 20px; font-size:1.5em"
        | Create new book copies
      ul
        li.right
          / Note: 'Append' new row at the end of the 'tbody#book_copy' node
          = link_to_add_association f, :book_copies, 'data-association-insertion-method' => 'prepend', 'data-association-insertion-node' => 'tbody#book_copy'
            ' Add Row
            i.material-icons.left playlist_add

  .card-panel
    .row
      table.compact
        thead
          th Barcode
          th Label
          th Condition
          th Notes
        tbody#book_copy
          = f.fields_for :book_copies, @book_edition.book_copies.build do |book_copy|
            = render 'book_copy_fields', f: book_copy

  .toolbar.z-depth-1
    button.btn.waves-effect.waves-light type="submit" Save
    = link_to 'Cancel', book_edition_book_copies_path(@book_edition), class: "waves-effect waves-light btn btn-flat"

/ The following javascript callback function will turn select elements in the dynamically created row 
/ into MaterializeCSS style selects.
javascript:
  $('#book_copy').on('cocoon:after-insert', function() {
    $('select').material_select();
  });

  $(document).ready(function() {
    var pressed = false;
    var chars = [];
    $(window).keypress(function(e) {
      if (e.which >= 45 && e.which <= 112) {
          chars.push(String.fromCharCode(e.which));
      }
      if (pressed == false) {
        setTimeout(function(){
          if (chars.length >= 11) {
            var barcode = chars.join("");
            $.getJSON("/book_copies/"+barcode+"/check_barcode.json", null, function (data) {
              /* Barcode already exists in database */
              Materialize.toast("Error: barcode already exists.", 4000, 'red');
              pressed = false;
            }).fail(function(){
              /* Entered barcode doesn't exist in the database */
              insert_values(barcode);
              pressed = false;
            });            
          }
          chars = [];
        },500);
      }
      pressed = true;
    });
    $(document).on("keypress","[name$='[barcode]']", (function(e){  
      var c = String.fromCharCode(e.which);
      if ( $.trim($(e.target).val()).length >= 10 ) {
        var barcode = $.trim($(e.target).val()+c);
        e.preventDefault();
        $.getJSON("/book_copies/"+barcode+"/check_barcode.json", null, function (data) {
          /* Barcode already exists in database */
          $(e.target).val('');
          Materialize.toast("Invalid barcode.", 5000, 'red');
        }).fail(function(){
          /* Entered barcode doesn't exist in the database */
          insert_values(barcode);
          $("[name$='[barcode]']:first").focus();
        });
      }
    }));
    var insert_values = function (barcode) {
      $("[name$='[barcode]']:first").val(barcode);
      $("[name$='[book_condition_id]']:first").val($("[name$='[book_condition_id]']:last").val());
      $('select').material_select();
      $(".add_fields").trigger('click');      
    };
  });
