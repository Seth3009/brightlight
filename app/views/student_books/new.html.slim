h4 Book Assignment

.card-panel
  .list_description
    dl.row
      dt = @student.name
      dd = "(#{@grade_section.try(:name)})"

= form_for @student do |f|
  nav
    .nav-wrapper
      .brand-logo style="margin-left: 20px; font-size:1.5em"
        | Add student textbook 
      ul
        li.right
          / Note: 'Append' new row at the end of the 'tbody#book_copy' node
          = link_to_add_association f, :student_books, 'data-association-insertion-method' => 'append', 'data-association-insertion-node' => 'tbody#student_book'
            ' Add Row
            i.material-icons.left playlist_add

  .card-panel
    .row
      table.compact
        thead
          th Barcode
          th Title 
          th
        tbody#student_book
          = f.fields_for :student_books, @student.student_books.build do |student_book|
            = render 'student_book_fields', {f: student_book, form: f}

  .toolbar.z-depth-1
    button.btn.waves-effect.waves-light type="submit" data-disable=true Save
    = link_to 'Cancel', student_student_books_path(@student), class: "waves-effect waves-light btn btn-flat"

/ The following javascript callback function will turn select elements in the dynamically created row 
/ into MaterializeCSS style selects.
javascript:
  $(document).ready(function() {
    var pressed = false;
    var chars = [];
    var grade_section_id = #{raw @grade_section.id};
    var grade_level_id = #{raw @grade_section.grade_level_id};
    var student_no = "#{raw @student.student_no}";
    var roster_no = "#{raw @student.current_roster_no}";
    $(window).keypress(function(e) {
      if (e.which >= 45 && e.which <= 112) {
          chars.push(String.fromCharCode(e.which));
      }
      if (pressed == false) {
        setTimeout(function(){
          if (chars.length >= 11) {
            var barcode = chars.join("");
            var field = $("[name$='[barcode]']:last");
            field.val(barcode);
            $.getJSON("/book_copies/"+barcode+".json?st="+#{@student.id}, null, function (data) {
              insert_values(data);
            }).fail(function(){
              $("[name$='[barcode]']:last").val('');
              Materialize.toast("Invalid barcode.", 4000, 'red');
            });            
          }
          chars = [];
          pressed = false;
        },500);
      }
      pressed = true;
    });
    $(document).on("keypress","[name$='[barcode]']", (function(e){
      var c = String.fromCharCode(e.which);
      if ( $.trim($(e.target).val()).length > 10 ) {
        var barcode = $.trim($(e.target).val()+c);
        e.preventDefault();
        $.getJSON("/book_copies/"+barcode+".json", null, function (data) {
          insert_values(data);
          $("[name$='[barcode]']:last").focus();
        }).fail(function(){
          $(e.target).val('');
          Materialize.toast("Invalid barcode.", 5000, 'red');
        });
      }
    }));
    var insert_values = function(data) {
      book = data.book_copy;
      $(".titles:last").html(book.book_edition.title);
      // $(".book_numbers:last").html(book.copy_no);
      // $(".book_loans:last").html(book.loans.student_name);
      $(".barcodes:last").val(book.barcode);
      $(".book_copy_ids:last").val(book.id);
      $(".academic_year_ids:last").val(book.academic_year.academic_year_id);
      $(".copy_nos:last").val(book.copy_no);
      $(".grade_level_ids:last").val(grade_level_id);
      $(".grade_section_ids:last").val(grade_section_id);
      $(".issue_dates:last").val(book.academic_year.start_date);
      $(".return_dates:last").val(book.academic_year.end_date);
      $(".initial_copy_condition_ids:last").val(book.book_condition_id);
      $(".student_nos:last").val(student_no);
      $(".roster_nos:last").val(roster_no);
      $(".prev_academic_year_ids:last").val(book.academic_year.prev_academic_year_id);
      $(".book_edition_ids:last").val(book.book_edition_id);
      //$(".book_title_ids:last").val(book.book_edition.book_title_id);
      $(".add_fields").trigger('click');
    }
  });
  
