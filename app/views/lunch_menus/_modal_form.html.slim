= form_for @lunch_menu do |f|
  .modal-content
    - if @lunch_menu.errors.any?
      #error_explanation
        h2 = "#{pluralize(@lunch_menu.errors.count, "error")} prohibited this lunch_menu from being saved:"
        ul
          - @lunch_menu.errors.full_messages.each do |message|
            li = message

    .row
      .input-field.col.s6     
        = f.hidden_field :lunch_date, value: params[:d]    
        = f.label :food_id, class:'active'
        / = f.text_field :food_id, class:'food_id', placeholder: "Type your food name here", prompt: true
        = text_field_tag :food, '', class: 'food_autocomplete', placeholder: "Type your food name here", prompt: true
        = f.hidden_field :food_id, class:'food_id'
    .row
      .input-field.col.s2 
        = f.label :adj_g1, "G1-G3", class:'active'
        = f.number_field :adj_g1
      .input-field.col.s2 
        = f.label :adj_g4, "G4-G6", class:'active'
        = f.number_field :adj_g4
      .input-field.col.s2 
        = f.label :adj_sol, "SOL", class:'active'
        = f.number_field :adj_sol
      .input-field.col.s2 
        = f.label :adj_sor, "SOR", class:'active'
        = f.number_field :adj_sor
      .input-field.col.s2 
        = f.label :adj_adult, "Adult", class:'active'
        = f.number_field :adj_adult    
      
        = f.hidden_field :academic_year_id, value: @year
  .modal-footer
    button.btn.btn-flat.waves-effect.waves-light.modal-action.modal-close type="submit" Save
    a.modal-action.modal-close.waves-effect.waves-light.btn-flat href="#!" Close


javascript:
  $(document).on('focus', '.food_autocomplete', function() {
    $(this).autocomplete({
        source: "/foods?format=json",
        max: 30,
        minLength: 3,
        create: function() {
          $(this).data( "ui-autocomplete" )._renderItem = function( ul, item ) {
            return $( "<li>" )
              .append( "<div>" + item.name +"</div>" )
              .appendTo( ul );
          }
        },
        select: function( event, ui ) {
          insert_food_values(event.target, ui.item); 
          return false;
        }
      });  
    
    function insert_food_values(el, food) {            
      $(".food_autocomplete").val(food.name)
      $(".food_id").val(food.id)
      console.log(food);      
    }   
  });


  $(document).ready(function(){
    $('.btn').attr('disabled',true);
    $('.food_autocomplete').keyup(function(){
        if($(this).val().length !=0)
            $('.btn').attr('disabled', false);            
        else
            $('.btn').attr('disabled',true);
            $(".food_id").val('')
    })
  });
  

  
