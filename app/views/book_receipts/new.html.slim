h4 Add Book to Receipt Form

= form_for @grade_section do |f|
  nav
    .nav-wrapper
      ul
        li 
          = link_to book_receipts_path(gs:params[:gs],r:params[:r],year:params[:year])
            i.material-icons.left chevron_left
        li.right#add-row
          = link_to_add_association f, :book_receipts, 'data-association-insertion-method' => 'append', 'data-association-insertion-node' => 'tbody#book_receipts'
            ' Add Row
            i.material-icons.left playlist_add

  ul.collapsible data-collapsible="expandable"
    li
      .collapsible-header        
        | More Options...
        i.material-icons.left settings
        div.right 
          input.checkbox-toggle type="checkbox" id="use-scanner"
          = label_tag "use-scanner", "Use scanner"

      .collapsible-body
        .container style="margin-top:16px"
          .row
            .input-field.col.s4
              = f.label :Class, class:'active'
              = text_field_tag :class, @grade_section.name, disabled:true
            .input-field.col.s1 
              = label_tag :roster_no, 'Number', class:'active'
              = select_tag :roster_no, options_for_select((1..20).map{|x| [x.to_s,x]}, @roster_no)
  .card-panel
    .row
      table.compact
        thead
          th Barcode
          th Title 
          th
        tbody#book_receipts
          = f.fields_for :book_receipts, @grade_section.book_receipts.build do |book_receipt|
            = render partial: 'book_receipts/book_receipt_fields', locals: { f: book_receipt }
  
  // Pass these parameters to GradeSection#update
  = hidden_field_tag :gs, @grade_section.id 
  = hidden_field_tag :year, @academic_year.id 
  = hidden_field_tag :r, @roster_no

  .toolbar.z-depth-1
    button.btn.waves-effect.waves-light type="submit" Save
    = link_to 'Cancel', book_receipts_path(gs:params[:gs],r:params[:r],year:params[:year]), class: "waves-effect waves-light btn btn-flat"

javascript:
  $("[name$='[barcode]']").codeScanner({
    minEntryChars: 11,
    onScan: function($element, input) {
      $("#use-scanner").prop("checked",true);
      var barcode = input.trim();
      $.getJSON("/book_receipts/check.json?barcode="+barcode, null, function (data) {
        if ($("tr:last").find("[name$='[barcode]']").val() != "") {
          $(".add_fields").trigger('click');
        } else if (!$("tr:last").is(":visible")) {
          $("tr:last").show();
        }
        insert_values(data,$("tr:last"));        
      }).fail(function(xhr){
        Materialize.toast($.parseJSON(xhr.responseText).errors, 4000, 'red');
      });            
    }
  });

  $("tbody#book_receipts").on("keypress", "tr", function (e) {
    if (e.keyCode == 13) {
      e.preventDefault();
      e.stopPropagation();
      $("#use-scanner").prop("checked",false);
      var barcode = $(this).find("[name$='[barcode]']").val().trim();
      var element = $(this);
      $.getJSON("/book_receipts/check.json?barcode="+barcode, null, function (data) {
        insert_values(data,element);
      }).fail(function(xhr){
        $(e.target).val('');
        Materialize.toast($.parseJSON(xhr.responseText).errors, 5000, 'red');
      });
      return false;
    }
  });

  var insert_values = function (data, el) {
    var book = data.book_copy;
    el.find("[name$='[barcode]']").val(book.barcode);
    el.find(".titles").html("<a href='/book_copies/"+book.id+"'>"+book.title+"</a>");
    el.find(".book_copy_ids").val(book.id);
    el.find(".book_edition_ids").val(book.book_edition_id);
    el.find(".copy_nos").val(book.copy_no);
    el.find(".barcodes").val(book.barcode);
    el.find(".initial_condition_ids").val(book.book_condition_id);      
  };
  $("#roster_no").change(function() {
    $(".roster_nos,[name='r']").val($("[name='roster_no']").val());
  });
  $("#grade_section_grade_section_id").change(function() {
    $("[name='gs']").val($("#grade_section_grade_section_id").val());
  });

  $("#use-scanner").change(function() {
    $("tr.nested-fields").each(function(){
      v = $(this).find(".book_copy_ids").attr('value');
      if (v == undefined) {
        if ($("#use-scanner").is(":checked")) {
          $(this).hide();
        } else {
          $(this).show();
        }
      } 
    });
    if (!$("#use-scanner").is(":checked")) {
      if ($("tr:last").find("[name$='[barcode]']").val() != "") {
        $(".add_fields").trigger('click');
      }
      $("#add-row").show();
    } else {
      $("#add-row").hide();
    }
  });
  

  
