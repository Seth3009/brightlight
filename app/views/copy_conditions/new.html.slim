h4 Book Condition Checking

= form_for @copy_condition do |f|
  nav
    .nav-wrapper
      ul
        li
          = link_to :back
            i.material-icons chevron_left
        li.right
          button.btn.waves-effect.waves-light type="submit" Save 

  == render partial: 'fields', locals: {f: f}

javascript:
  $(document).ready(function() {
    var pressed = false;
    var chars = [];
    $(window).keypress(function(e) {
      if (e.which >= 45 && e.which <= 112) {
          chars.push(String.fromCharCode(e.which));
      }
      if (pressed == false) {
        setTimeout(function(){
          if (chars.length >= 11) {
            var barcode = chars.join("");
            // console.log("Barcode Scanned: " + barcode);
            // assign value to some input (or do whatever you want)
            var field = $("[name$='[barcode]']");
            field.val(barcode);
            $.getJSON("/book_copies/"+barcode+".json", null, function (data) {
              book = data.book_copy;
              $(".titles:last").html(book.book_edition.title);
              $(".add_fields").trigger('click');
            }).fail(function(){
              $("[name$='[barcode]']:last").val('');
              Materialize.toast("Invalid barcode.", 4000, 'red');
            });            
          }
          chars = [];
          pressed = false;
        },500);
      }
      pressed = true;
    });
    $(document).on("keypress","[name$='[barcode]']", (function(e){
      if ( e.which === 13 ) {
        e.preventDefault();
        $.getJSON("/book_copies/"+$(e.target).val()+".json", null, function (data) {
          book = data.book_copy;
          $(".titles:last").html(book.book_edition.title);
          $(".add_fields").trigger('click');
          $("[name$='[barcode]']:last").focus();
        }).fail(function(){
          $(e.target).val('');
          Materialize.toast("Invalid barcode.", 5000, 'red');
        });
      }
    }));
  });
