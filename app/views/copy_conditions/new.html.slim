h4 Book Condition Checking

= form_for @copy_condition do |f|
  nav
    .nav-wrapper
      ul
        li
          = link_to :back
            i.material-icons chevron_left
        li.right
          button.btn.waves-effect.waves-light type="submit" Save 

  .card-panel
    .row      
      .input-field 
        .label Select book condition
        - BookCondition.where.not(slug:'missing').each do |book_condition|
          .col.s1
            = radio_button_tag :book_condition, book_condition.id, book_condition.id==1 ? true : false, class: 'with-gap'
            = label_tag "book_condition_#{book_condition.id}", book_condition.code
        
  .card-panel
    .row
      - if @copy_condition.errors.any?
        #error_explanation
          h2 = "#{pluralize(@copy_condition.errors.count, "error")} prohibited this copy_condition from being saved:"
          ul
            - @copy_condition.errors.full_messages.each do |message|
              li = message
      .input-field.col.s4
        = f.text_field :barcode, disabled:true, placeholder: 'Barcode'
        = f.hidden_field :barcode
      .input-field.col.s2
        = f.label 'New condition', class:'active'
        = f.collection_select :book_condition_id, BookCondition.all, :id, :code, {selected: @copy_condition.book_condition_id}
      .input-field.col.s12
        .titles
      .input-field.col.s12
        = f.label :notes
        = f.text_field :notes, value: ""
        = f.hidden_field :user_id, value: current_user.try(:id)

javascript:
  $(document).ready(function() {
    var pressed = false;
    var chars = [];
    $(window).keypress(function(e) {
      if (e.which >= 45 && e.which <= 112) {
          chars.push(String.fromCharCode(e.which));
      }
      if (pressed == false) {
        setTimeout(function(){
          if (chars.length >= 11) {
            var barcode = chars.join("");
            // console.log("Barcode Scanned: " + barcode);
            // assign value to some input (or do whatever you want)
            var field = $("[name$='[barcode]']");
            field.val(barcode);
            $.getJSON("/book_copies/"+barcode+".json", null, function (data) {
              book = data.book_copy;
              $(".titles:last").html(book.book_edition.title);
              $(".add_fields").trigger('click');
            }).fail(function(){
              $("[name$='[barcode]']:last").val('');
              Materialize.toast("Invalid barcode.", 4000, 'red');
            });            
          }
          chars = [];
          pressed = false;
        },500);
      }
      pressed = true;
    });
    $(document).on("keypress","[name$='[barcode]']", (function(e){
      if ( e.which === 13 ) {
        e.preventDefault();
        $.getJSON("/book_copies/"+$(e.target).val()+".json", null, function (data) {
          book = data.book_copy;
          $(".titles:last").html(book.book_edition.title);
          $(".add_fields").trigger('click');
          $("[name$='[barcode]']:last").focus();
        }).fail(function(){
          $(e.target).val('');
          Materialize.toast("Invalid barcode.", 5000, 'red');
        });
      }
    }));
  });
