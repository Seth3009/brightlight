- title = "Course texts: #{@course.name} (#{@course.number})"
.label Course   
h4 #{@course.name} (#{@course.number}) [#{@course.grade_level.name}]

nav
  .nav-wrapper
    ul
      li
        = link_to @course
          i.material-icons chevron_left
        
    ul.right
      li
        = link_to copy_course_course_texts_path(@course), remote: true
          | Initialize
          i.material-icons.left.tooltipped data-position="bottom" data-delay="30" data-tooltip="Copy from teacher's books" queue
      li
        = link_to new_course_course_text_path(@course), remote: true
          | Add
          i.material-icons.left.tooltipped data-position="bottom" data-delay="30" data-tooltip="Add new book" add
      li
        = link_to course_course_texts_path(@course)
          i.material-icons.tooltipped data-position="bottom" data-delay="30" data-tooltip="List view"  list
      li
        = link_to course_course_texts_path(@course, {v:'block'})
          i.material-icons.tooltipped data-position="bottom" data-delay="30" data-tooltip="Expanded view"  view_module

- if @view_style == :list
  .card-panel
    .label Course texts

    = form_tag({action:'filter'}) do
      .input-field
        = hidden_field_tag :course_id, params[:course_id]
        = hidden_field_tag :view, params[:view]
        = select_tag :categories, options_from_collection_for_select(BookCategory.all,:id,:name), multiple: true, size: BookCategory.count, prompt: "Please select"
        = submit_tag 'Filter'

    table.compact.striped
      thead
        tr
          th Title
          th Author
          th Publisher
          th Category
          th.no-print Actions

      tbody
        - @course_texts.each do |course_text|
          tr
            - if course_text.book_title.present?
              td = link_to course_text.book_title.title, course_text.book_title
              td = course_text.book_title.authors
              td = course_text.book_title.publisher
              td = course_text.book_category.try(:code)
            - else
              td Missing data for Book Title id: #{course_text.book_title_id}
              td
              td
              td
            td.no-print
              = link_to edit_course_text_path(course_text), remote: true
                i.material-icons edit
              = remote_link_to_delete course_text, message: "Book has been removed", class: "left waves-effect waves-light red-text"
                i.material-icons delete
- else
  .row
    - @course_texts.each do |course_text|
      .col.s12.m2.l2
        .card.book-info
          .card-image style="max-width:200px"
            - thumbnail = course_text.book_title.image_url.present? ? course_text.book_title.image_url : 'book-icon.png' 
            = image_tag(thumbnail, class: 'list_image activator')           
          .book-title.activator
            = course_text.book_title.title
          .card-action
            = link_to course_text.book_title
              i.material-icons.left.tooltipped data-position="bottom" data-delay="50" data-tooltip="Show" visibility
            = link_to course_text, message: "Book has been removed", class: "left waves-effect waves-light", remote: true, method: :delete
              i.material-icons.red-text delete
          .card-reveal
            .card-title.grey-text
              i.material-icons.right close
            h5 = course_text.book_title.title             
            .label Author
            p = course_text.book_title.authors
            .label Publisher
            p = course_text.book_title.publisher

#modal-form.modal.modal-fixed-footer.ui-front.medium


javascript:
  $(document).on('focus', '.title_autocomplete', function() {
    $('.title_autocomplete').autocomplete({
      source: "/book_titles.json",
      minLength: 3,
      create: function() {
        $(this).data( "ui-autocomplete" )._renderItem = function( ul, item ) {
          return $( "<li>" )
            .append( "<div>" + item.label +"</div>" )
            .appendTo( ul );
        }
      },
      select: function(event, ui) {
        event.preventDefault();
        $('#add-button').prop('disabled', false);
        insert_values(ui.item);
      }
    });
    function insert_values(item ) {
      $("#course_text_book_title_id").val(item.value);
      $("#selected").html(item.title);
      $("#authors").html(item.authors);
      $("#publisher").html(item.publisher);
      $("#book-cover").attr("src", item.image_url);
      $("#title_field").val("");
      $("#book-cover").scrollTop(0);
    };
    
  });
