.card-panel
  .row
    .input-field.col.m2
      = f.label :transaction_date, class: 'active'
      = f.date_field :transaction_date, value: Time.now.strftime('%Y-%m-%d')
    .input-field.col.m8
      = f.label :employee, class: 'active'    
      / = f.hidden_field :employee_id, value: params[:employee_id]
      / = text_field_tag :employee, params[:employee], disabled: true  
      = f.hidden_field :employee_id, value: f.object.employee_id || params[:employee_id]
      = text_field_tag :employee, f.object.employee || params[:employee], disabled: params[:employee_id].present?, class: "employee_autocomplete", placeholder: "Search by Employee name or by Department name or by Job Title"            
      
    .input-field.col.m2 
      = f.label '', 'Transaction Type', class: 'active'     
      = select_tag 'in_out', options_for_select(["IN", "OUT"],"OUT"), id: "trx_type"
  .row
    .input-field.col.m12
      = f.label '', 'Transaction Notes', class: 'active'
      = f.text_field :notes, placeholder: "You can fill notes for this transaction here"

javascript:
  $( function() {
    $( ".employee_autocomplete" ).autocomplete({
        source: "/employees?format=json",
        max: 30,
        minLength: 3,
        create: function() {
          $(this).data( "ui-autocomplete" )._renderItem = function( ul, item ) {
            return $( "<li>" )
              .append( "<div>" + item.name +"</div>" )
              .appendTo( ul );
          }
        },
        select: function( event, ui ) {
          insert_input_values(ui.item); 
          return false;
        }
      });     
  });

  function insert_input_values(employee) {
    $("#supplies_transaction_employee_id").val(employee.id);
    $(".employee_autocomplete").val(employee.name);
    window.location.href= "/supplies_transactions/new?employee_id=" + employee.id + "&employee=" + employee.name;
  }

  $(document).on('change', ".employee_autocomplete", function() {
    if ($(this).value === '') {
      $("#employee_id")
    }
  })
      
