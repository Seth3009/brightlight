-title = 'Purchase Order'
.label Purchase Order
h4 = "Purchase Order no #{@purchase_order.order_num}"

nav
  .nav-wrapper
    ul
      li 
        = link_to purchase_orders_path
          | All Purchase Orders
          i.material-icons.left chevron_left
      -if can? :process, Requisition
        li 
          = link_to list_requisitions_path
            | Process FPB
            i.material-icons.left play 
    -if can? :process, Requisition
      ul.right
        li
          = link_to list_purchase_order_path(@purchase_order)
            i.material-icons.tooltipped data-position="bottom" data-delay="50" data-tooltip="Shopping List" toc
        li
          = link_to letter_purchase_order_path(@purchase_order)
            i.material-icons.tooltipped data-position="bottom" data-delay="50" data-tooltip="PO Letter" description
        li
          = link_to edit_purchase_order_path(@purchase_order)
            | Edit
            i.material-icons.left edit

.card-panel
  .row
    .col.s12.m6
      .card-panel
        .record-field
          i.material-icons.prefix store
          .label Supplier
          .item = @purchase_order.supplier.try(:company_name) 
        .record-field
          i.material-icons.prefix account_circle
          .label Contact
          .item = @purchase_order.contact
        .record-field
          i.material-icons.prefix phone
          .label Phone
          .item = @purchase_order.phone_contact
      .card-panel
        .record-field
          .label Instructions to supplier
          .item = @purchase_order.instructions

    .col.s12.m6
      .card-panel
        .row
          .record-field.s6
            .label Order #
            .item = @purchase_order.order_num
          .record-field.s6
            .label Buyer
            .item = @purchase_order.buyer.try(:name)
          .record-field.s6
            .label Requestor
            .item = @purchase_order.requestor.try(:name)
          .record-field.s6
            .label Department
            .item = @purchase_order.department.try(:name)
          .record-field.s6
            .label Order date
            .item = @purchase_order.order_date
          .record-field.s6
            .label Due date
            .item = @purchase_order.due_date
          .record-field.s2
            .label Currency
            .item = @purchase_order.currency
          .record-field.s2
            .label Status
            .item = @purchase_order.status.humanize
          .record-field
            .label Notes
            .item = @purchase_order.notes

= form_tag new_purchase_receive_path, method: :get do
  
  .card-panel
    nav.light
      .nav-wrapper
        .brand-logo.hide-on-med-and-down style="margin-left: 20px; font-size:1.5em"
          | Order Items
        ul.right
          -if can? :create, PurchaseReceive
            li 
              button.btn.check-togglable type="submit" data-disable=true disabled=true 
                |New Receive
                i.material-icons.left add
    = hidden_field_tag :po, @purchase_order.id

    ul.tabs.z-depth-1
      li.tab.col.s2
        a.active href='#tab1' Purchase Order
      li.tab.col.s2
        a.active href='#tab2' Purchase Request
      li.tab.col.s2
        a href='#tab3' Purchase Receipt

    #tab1.tab-content
      .horizontal-scroll
        table.compact.striped
          thead
            tr
              th.wd25 Description
              th.right-align Qty
              th Unit
              th.right-align Unit price
              th.right-align Disc.
              th.right-align Est.Tax
              th.right-align Non-reccuring
              th.right-align Shipping
              th.right-align Total
              -unless @purchase_order.requested?
                th.right-align Actual
              th.right-align Remark

          tbody
            - @purchase_order.order_items.each do |item|
              tr.compact
                td.wd25 
                  = item.description
                  i.material
                td.right-align = item.quantity
                td = item.unit
                td.right-align = currency(item.unit_price, currency: item.currency)
                td.right-align = currency(item.discount, currency: item.currency)
                td.right-align = currency(item.est_tax, currency: item.currency)
                td.right-align = currency(item.non_recurring, currency: item.currency)
                td.right-align = currency(item.shipping, currency: item.currency)
                td.right-align = currency(item.line_amount, currency: item.currency)
                -unless @purchase_order.requested?
                  td.right-align = currency(item.actual_amt, currency: item.currency) || 'N/A'
                td 
                  -if item.remark.present?
                    i.material-icons.right.orange-text.tooltipped data-position="bottom" data-delay="50" data-tooltip="#{item.remark}" speaker_notes
          tfoot
            tr.compact
              td.right-align colspan=8 Subtotal
              td.right-align = currency(@purchase_order.order_items.sum(:line_amount), currency: @purchase_order.currency) || 'N/A'
              -unless @purchase_order.requested?
                td.right-align = currency(@purchase_order.order_items.sum(:actual_amt), currency: @purchase_order.currency) || 'N/A'

    #tab2.tab-content
      .horizontal-scroll
        table.compact.striped
          thead
            tr
              th.wd25 Description
              th.right-align Qty Requested
              th Unit
              th.right-align Est. unit price
              th.right-align Date Req'd
              th.right-align Link
          tbody
            - @purchase_order.order_items.each do |item|
              tr.compact
                -if item.req_item
                  td.wd25 
                    = item.req_item.description
                    i.material
                  td.right-align = item.req_item.qty_reqd
                  td = item.req_item.unit
                  td.right-align = currency(item.req_item.est_price, currency:item.req_item.currency) || '--'
                  td.right-align = item.req_item.needed_by_date
                  td
                    = link_to item.req_item.requisition, target: 'blank'
                      i.material-icons.right.tooltipped data-position="bottom" data-delay="50" data-tooltip="Purchase Request" open_in_new
                -else
                  td.red-text = 'Error: missing requisition item'

    #tab3.tab-content
      .horizontal-scroll
        table.compact.striped
          thead
            tr
              th.wd25 Description
              th.right-align Qty Ordered
              th Unit
              th.right-align Qty Received
              th.right-align Qty Accepted
              th.right-align Qty Rejected
              th Location
              th Code
              th.left-align Actions
              th

          tbody
            - @purchase_order.order_items.each do |item|
              - if item.receive_items.blank?
                tr.compact
                  td.wd25 
                    = item.description
                  td.right-align = item.quantity
                  td = item.unit
                  td colspan=6 &nbsp;
                  td
                    - if can? :create, PurchaseReceive
                      input.checkbox.toggle-trigger type="checkbox" id="item-#{item.id}" name="items[#{item.id}]"
                      = label_tag "item-#{item.id}", ""
              - else
                -item.receive_items.each.with_index do |receive_item, index|
                  tr.compact
                    td.wd25
                      = item.description if index == 0
                    td.right-align = item.quantity if index == 0
                    td = receive_item.unit if index == 0
                    td.right-align = receive_item.quantity
                    td.right-align = receive_item.qty_accepted
                    td.right-align = receive_item.qty_rejected
                    td = receive_item.location
                    td = receive_item.code
                    td 
                      = link_to purchase_receive_path(receive_item.purchase_receive)
                        i.material-icons.left.tooltipped data-position="bottom" data-delay="30" data-tooltip="View" visibility
                      - if can?(:check, receive_item.purchase_receive) && receive_item.purchase_receive.status != "Delivered"
                        .red-icon-button
                          = link_to edit_purchase_receive_path(receive_item.purchase_receive, check:'y'), class:"tooltipped", data: {position:"bottom", delay:"30", tooltip:"Check & update accepted/rejected quantities"}
                            |Check
                            i.material-icons.left beenhere
                    td
                      - if can?(:create, PurchaseReceive) && !item.all_received? && index == 0
                        input.checkbox.toggle-trigger type="checkbox" id="item-#{item.id}" name="items[#{item.id}]"
                        = label_tag "item-#{item.id}", ""
                  
    .row
      .col.offset-m8.s12.m4
        .card-panel.blue-grey.lighten-4
          .display-field
            .label Subtotal
            .item = currency(@purchase_order.subtotal, currency: @purchase_order.currency)
          .display-field
            .label Discounts
            .item = currency(@purchase_order.discounts, currency: @purchase_order.currency)
          .display-field
            .label Est. tax
            .item = currency(@purchase_order.est_tax, currency: @purchase_order.currency)
          .display-field
            .label Non recurring
            .item = currency(@purchase_order.non_recurring, currency: @purchase_order.currency)
          .display-field
            .label Shipping
            .item = currency(@purchase_order.shipping, currency: @purchase_order.currency)
          .display-field
            .label Total Amount
            .item = currency(@purchase_order.total_amount, currency: @purchase_order.currency)
          .display-field
            .label Down Payment
            .item = currency(@purchase_order.down_payment, currency: @purchase_order.currency)
          .display-field
            .label Remaining Amount
            .item = currency(@purchase_order.total_amount - @purchase_order.down_payment, currency: @purchase_order.currency) rescue nil
