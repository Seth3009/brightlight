- title 'Purchase Request'
h4 Purchase Request


nav
  .nav-wrapper
    ul
      li
        = link_to requisitions_path
          | Purchase Requests
          i.material-icons.left chevron_left
      -if can? :process, Requisition
        li
          = link_to list_requisitions_path
            | List
            i.material-icons.left list_alt
    ul.right
      li
        - unless @requisition.sent_to_supv
          = link_to edit_requisition_path @requisition
            i.material-icons edit
        - else
          i.material-icons.left lock

.panel
  ul.collapsible data-collapsible="expandable"
    li
      .collapsible-header.active
        | Detail
        i.material-icons.arrow.left chevron_right
      .collapsible-body.container-padding
        ul.collection
          li.collection-item.row
            .col.s6.m2
              .label Req. No.
              .item = @requisition.id
            .col.s6.m2
              .label Req. Date
              .item = @requisition.date_required
            .col.s12.m8
              .label Description
              .item = @requisition.description
          li.collection-item.row
            .col.m2
              .label Requester
              .item = @requisition.requester
            .col.m2
              .label Department
              .item = @requisition.department  
            .col.m8
              .label Notes
              .item = @requisition.notes      
          li.collection-item.row
            .col.s6.m2
              = check_box_tag :is_budgeted, true, @requisition.is_budgeted
              = label_tag 'Budgeted'
            .col.s6.m2
              .label Budget
              .item = @requisition.budget || "--"
            .col.s6.m4
              .label Budget Item
              .item = @requisition.budget_item || "--"
            .col.s6.m4
              .label Budget notes
              .item = @requisition.budget_notes
          li.collection-item.row
            = form_tag new_purchase_order_path, method: :get do
              .label.left Requested Items
              button.right.btn#create-po-button type="submit" disabled=true Create PO
              table.compact.striped
                thead
                  tr
                    th No
                    th Description
                    th Qty
                    th Unit
                    th Est. Price
                    th Req'd Date
                    -if can? :process, Requisition
                      th PO No.
                      th
                tbody
                  - @req_items.each.with_index(1) do |req_item, i|
                    tr
                      td = "#{i}."
                      td = req_item.description
                      td = req_item.qty_reqd
                      td = req_item.unit
                      td = "#{req_item.currency}#{req_item.est_price}"
                      td = req_item.needed_by_date
                      -if can? :process, Requisition
                        td 
                          -if req_item.order_item.present?
                            = link_to req_item.order_item.purchase_order.order_num, purchase_order_path(req_item.order_item.purchase_order)
                            i.material-icons.green-text.left check
                          -else
                            = link_to new_purchase_order_path(req: @requisition.id, item: req_item.id)
                              i.material-icons.tooltipped data-position="right" data-delay="30" data-tooltip="Create P.O." shop
                        td 
                          = hidden_field_tag :req, @requisition.id
                          input.checkbox type="checkbox" id="reqitem-#{req_item.id}" name="items[#{req_item.id}]"
                          / This label is required by Materialize CSS for the checkbox to work
                          = label_tag "reqitem-#{req_item.id}", ""
    li
      .collapsible-header.active
        | Approval
        i.material-icons.arrow.left chevron_right
      .collapsible-body.container-padding
        ul.collection
          li.collection-item.row.no-bottom-border
            .col.m3
              .label Supervisor
              .item = @requisition.supervisor || "--"
            .col.m3
              .label Approval
              - if @requisition.is_supv_approved
                |Approved
                i.material-icons.left.tooltipped.green-text data-position="bottom" data-delay="50" data-tooltip="Supervisor approved" check_box
              - elsif @requisition.is_supv_approved == false
                |Not approved
                i.material-icons.left.tooltipped.red-text data-position="bottom" data-delay="50" data-tooltip="Supervisor did not approve" cancel
              - else
                i.material-icons.left check_box_outline_blank
            .col.m6
              - if @requisition.pending_supv_approval? && can?(:approve, @requisition)
                .label Go to approval page
                = link_to "Approval", approve_requisition_path(@requisition, appvl: 'supv'), class:"btn btn-small btn-flat waves-effect waves-light"
              - else
                - if @requisition.is_supv_approved || @requisition.sent_to_supv
                  .label Approval Notes
                  .item = @requisition.req_appvl_notes || "--"
                - elsif can? :update, @requisition 
                  #submit-button
                    = link_to requisition_path(@requisition, send:'supv'), data: {params: {requisition: {active: true}}}, method: 'patch', remote: true, class: 'btn waves-effect waves-light'
                      | Send for approval 
          li.collection-item.row
            .col.m3
              .label Date sent to supervisor
              .item = @requisition.sent_to_supv || "--"
            .col.m3
              .label Date approved by supervisor
              .item = @requisition.supv_approved_date || "--"
            - if @requisition.is_supv_approved
              .col.m3
                .label By
                .item = @requisition.supervisor.try(:name) || "--"

          - unless @requisition.is_budgeted
            li.collection-item.row.no-bottom-border
              .col.m3
                .label Budget Approver
                .item = @requisition.budget_approver || "--"
              .col.m3
                .label Budget Approval
                - if @requisition.is_budget_approved
                  |Approved
                  i.material-icons.left.tooltipped data-position="bottom" data-delay="50" data-tooltip="Budget approved" check_box
                - elsif @requisition.is_budget_approved == false
                  |Not approved
                  i.material-icons.left.tooltipped data-position="bottom" data-delay="50" data-tooltip="Budget not approved" cancel
                - else
                  i.material-icons.left check_box_outline_blank
              .col.m6
                - if !@requisition.pending_supv_approval? && can?(:approve_budget, @requisition)
                  .label Go to approval page
                  = link_to "Approval", approve_requisition_path(@requisition, appvl: 'budget'), class:"btn btn-small btn-flat waves-effect waves-light"
                - else
                  .label Budget Notes
                  .item = @requisition.bgt_appvl_notes || "--"
            li.collection-item.row
              .col.m3
                .label Date sent for budget approval
                .item = @requisition.sent_for_bgt_approval || "--"
              .col.m3
                .label Date approved for budget
                .item = @requisition.budget_approved_date || "--"
              - if @requisition.is_budget_approved
                .col.m3
                  .label By
                  .item = @requisition.budget_approver.try(:name) || "--"
    li.comment-section
      .collapsible-header.active
        | Comments (#{@commentable.comments.count})
        i.material-icons.arrow.left chevron_right
        .right
          = link_to "#"
            |Add comment
            i.material-icons.left add
      .collapsible-body.container-padding
        = render 'comments/comment_widget'

javascript:
  $(document).on('ready page:load', function(){
    $('.collapsible').collapsible({
      accordion: false
    });
  });
  $(document).on("click", "input.checkbox", function(event) {
    var checked = $("input.checkbox:checked").length;
    if (checked > 0) {
      console.log("ON", checked);
      $("#create-po-button").prop("disabled", false);
    } else {
      console.log("OFF", checked);
      $("#create-po-button").prop("disabled", true)
    }
  })
